version: 3

# Taskfile principal - T√¢ches globales et inclusions
# Charge automatiquement les variables depuis le fichier .env s'il existe
dotenv: [ '.env', '.env.example' ]

includes:
  docker: ./taskfiles/docker/Taskfile.yml
  utils: ./taskfiles/utils/Taskfile.yml
  env: ./taskfiles/env/Taskfile.yml
  nodejs: ./taskfiles/nodejs/Taskfile.yml
  download: ./taskfiles/download/Taskfile.yml

vars:
  # Variables avec valeurs par d√©faut depuis .env ou valeurs de fallback
  PROJECT_NAME: '{{.PROJECT_NAME | default "flutter"}}'
  PROJECT_VERSION: '1.0.0'
  ENVIRONMENT: '{{.ENVIRONMENT | default "development"}}'
  # Variables Flutter et Node.js depuis .env.example
  FLUTTER_VERSION: '{{.FLUTTER_VERSION | default "3.35.5"}}'
  NODE_VERSION: '{{.NODE_VERSION | default "20"}}'

tasks:
  default:
    desc: "Affiche l'aide et les t√¢ches disponibles"
    silent: true
    cmds:
    - echo "üõ†Ô∏è  Collection de Taskfiles pour le d√©veloppement"
    - echo ""
    - echo "T√¢ches globales disponibles :"
    - task --list
    - echo ""

  info:
    desc: "Affiche les informations du projet avec les variables d'environnement"
    silent: true
    cmds:
    - |
      echo "üõ†Ô∏è  {{.PROJECT_NAME}} v{{.PROJECT_VERSION}} - Collection de Taskfiles"
      echo "Environnement: {{.ENVIRONMENT}}"
      echo "Flutter version: {{.FLUTTER_VERSION}}"
      echo "Node.js version: {{.NODE_VERSION}}"

  help:
    desc: "Affiche l'aide d√©taill√©e"
    aliases: [ h ]
    cmds:
    - task: default

  create:container:
    desc: "Construit l'image Docker pour l'environnement de d√©veloppement Flutter"
    silent: true
    cmds:
    - |
      echo "üèóÔ∏è Construction de l'image Docker avec Flutter {{.FLUTTER_VERSION}}..."
      docker build \
        --build-arg FLUTTER_VERSION={{.FLUTTER_VERSION}} \
        -t flutter-dev:latest \
        -t flutter-dev:{{.FLUTTER_VERSION}} \
        .
      echo "‚úÖ Image Docker construite avec succ√®s!"

  new:apps:
    desc: "Cr√©e une nouvelle application Flutter dans le r√©pertoire apps"
    silent: true
    cmds:
    - |
      echo "üöÄ Cr√©ation d'une nouvelle application Flutter avec la version {{.FLUTTER_VERSION}}..."
      docker run --rm -it \
        -v $PWD:/app \
        -e FLUTTER_VERSION={{.FLUTTER_VERSION}} \
        flutter-dev:{{.FLUTTER_VERSION}} \
        flutter create apps
      echo "‚úÖ Application Flutter cr√©√©e dans le r√©pertoire apps!"